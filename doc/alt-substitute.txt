*alt-substitute.txt*         For NVIM v0.8.0        Last change: 2023 April 06

==============================================================================
Table of Contents                           *alt-substitute-table-of-contents*

1. nvim-alt-substitute                    |alt-substitute-nvim-alt-substitute|
  - Features                     |alt-substitute-nvim-alt-substitute-features|
  - Installation             |alt-substitute-nvim-alt-substitute-installation|
  - Configuration           |alt-substitute-nvim-alt-substitute-configuration|
  - Supported Regex Flavors|alt-substitute-nvim-alt-substitute-supported-regex-flavors|
  - Limitations               |alt-substitute-nvim-alt-substitute-limitations|
  - Credits                       |alt-substitute-nvim-alt-substitute-credits|

==============================================================================
1. nvim-alt-substitute                    *alt-substitute-nvim-alt-substitute*

A substitute of vim’s :substitute that uses alternative regex flavors like
lua or javascript instead of vim regex. Supports ranges and incremental
preview.

Since you really don’t want to learn a whole new flavor of regex, _just_ to
be able to make search-and-replace operations in your editor.


  **Note** The plugin is still WIP and not fully usable yet.

- |alt-substitute-features|
- |alt-substitute-installation|
- |alt-substitute-configuration|
- |alt-substitute-supported-regex-flavors|
- |alt-substitute-limitations|
- |alt-substitute-credits|


FEATURES                         *alt-substitute-nvim-alt-substitute-features*


- Use `:AltSubstitute` or the short form `:S` to do perform search-and-replace
    operations, in lua patterns or javascript regex.
- Supports ranges, if no range is given works on the entire buffer (`%` as range)
- The `g` flag is supported. Without the `g` flag, only the first match in a line is replaced, like `:substitute`.
- Incremental preview of the substitution.
- Support for more flavors is easy to add. |alt-substitute-pull-requests-adding-more-regex-flavors-are-welcome.|

>lua
    foo -> bar                      -- intended replacement
    :%s /foo/bar/                   -- :substitute
    :S /foo/bar/                    -- nvim-alt-substitute
    
    deviceModel2020 -> deviceModel  -- intended replacement
    :%s /\(\w\+\)\d\+/\1/g          -- :substitute
    :S /(%w+)%d+/%1/g               -- nvim-alt-substitute (using lua flavor)
<


INSTALLATION                 *alt-substitute-nvim-alt-substitute-installation*

>lua
    -- packer
    use {
        "chrisgrieser/nvim-alt-substitute",
        config = function() require("alt-substitute").setup({}) end,
    }
    
    -- lazy.nvim
    {
        "chrisgrieser/nvim-alt-substitute",
        cmd = {"S", "AltSubstitute"},
        opts = true,
    },
<


CONFIGURATION               *alt-substitute-nvim-alt-substitute-configuration*

>lua
    -- default values
    opts = {
        regexFlavor = "lua", -- see below for supported flavors
        showNotification = true, -- whether to show the "x replacements made" notification
    }
<

Note that any regex flavor other than `"lua"` requires the respective language
support to be installed on your machine. `"javascript"`, for instance, requires
`node`.


SUPPORTED REGEX FLAVORS*alt-substitute-nvim-alt-substitute-supported-regex-flavors*

  flavor          requirements
  --------------- --------------
  lua (default)   -
  javascript      node
**Add Support for more flavors** The plugin has been specifically build with
easy extensibility in mind. It should take no more than ~10 LoC to add support
for more regex flavors. Have a look at how javascript regex is supported
<./lua/alt-substitute/regex/javascript.lua>. There is also a template you
should use. <./lua/alt-substitute/regex/template.lua>


LIMITATIONS                   *alt-substitute-nvim-alt-substitute-limitations*


- Only the `g` flag is supported.
- Does not support `inccommand=split`. Please use `inccommand=unsplit` instead.


CREDITS                           *alt-substitute-nvim-alt-substitute-credits*

**About Me** In my day job, I am a sociologist studying the social mechanisms
underlying the digital economy. For my PhD project, I investigate the
governance of the app economy and how software ecosystems manage the tension
between innovation and compatibility. If you are interested in this subject,
feel free to get in touch.

**Profiles** - reddit <https://www.reddit.com/user/pseudometapseudo> - Discord
<https://discordapp.com/users/462774483044794368/> - Academic Website
<https://chris-grieser.de/> - Twitter <https://twitter.com/pseudo_meta> -
ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser> -
LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>

**Buy Me a Coffee**

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
