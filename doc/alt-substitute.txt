*alt-substitute.txt*         For NVIM v0.8.0        Last change: 2023 April 07

==============================================================================
Table of Contents                           *alt-substitute-table-of-contents*

1. nvim-alt-substitute                    |alt-substitute-nvim-alt-substitute|
  - Motivation                 |alt-substitute-nvim-alt-substitute-motivation|
  - Features                     |alt-substitute-nvim-alt-substitute-features|
  - Installation             |alt-substitute-nvim-alt-substitute-installation|
  - Configuration           |alt-substitute-nvim-alt-substitute-configuration|
  - Usage                           |alt-substitute-nvim-alt-substitute-usage|
  - Current Limitations|alt-substitute-nvim-alt-substitute-current-limitations|
  - Add Support for more Regex Flavors|alt-substitute-nvim-alt-substitute-add-support-for-more-regex-flavors|
  - Other Search-and-Replace Plugins|alt-substitute-nvim-alt-substitute-other-search-and-replace-plugins|
  - Credits                       |alt-substitute-nvim-alt-substitute-credits|

==============================================================================
1. nvim-alt-substitute                    *alt-substitute-nvim-alt-substitute*

A substitute of vim’s `:substitute` Ex-command that uses lua patterns instead
of vim regex. Supports incremental preview and ranges.

Since you really don’t want to learn a whole new flavor of regex, _just_ to
be able to make search-and-replace operations in your editor.


- |alt-substitute-motivation|
- |alt-substitute-features|
- |alt-substitute-installation|
- |alt-substitute-configuration|
- |alt-substitute-usage|
- |alt-substitute-current-limitations|
- |alt-substitute-add-support-for-more-regex-flavors|
- |alt-substitute-other-search-and-replace-plugins|
- |alt-substitute-credits|


MOTIVATION                     *alt-substitute-nvim-alt-substitute-motivation*

Many people like me have only started (neo)vim after the introduction of lua of
configuration language. While pretty much everything about neovim can be done
with lua by now, search-and-replace-operations `:substitute` are one of few
areas remaining where you still have to use vimscript.

Regardless whether you like vimscript or not, learning vim’s flavor of regex
_just_ for search-and-replace-operations feels somewhat unproductive. So why
not work with a regex flavor you are already familiar with? Command of lua
patterns is certainly a more transferrable skill than mastering vim regex.
Also, lua support comes basically for free without dependencies bundled with
neovim already.

While lua patterns are indeed lacking, compared to "real" regex, they do come
with a few quite flexible items like the balanced match `%bxy` or the frontier
pattern `%f[set]` <https://www.lua.org/manual/5.4/manual.html#6.4.1>.


FEATURES                         *alt-substitute-nvim-alt-substitute-features*


- Use `:AltSubstitute` or the short form `:S` to do perform search-and-replace
    operations, in lua patterns or javascript regex.
- Incremental preview of the substitution.
- Supports ranges
- The `g` flag is supported and works like with `:substitute`.

>lua
    :%s /\(\w\+\)\d\+/\1/g          -- :substitute
    :S /(%w+)%d+/%1/g               -- nvim-alt-substitute 
    deviceModel2020 -> deviceModel  -- result
<


INSTALLATION                 *alt-substitute-nvim-alt-substitute-installation*

>lua
    -- lazy.nvim
    {
        "chrisgrieser/nvim-alt-substitute",
        cmd = {"S", "AltSubstitute"},
        opts = true,
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-alt-substitute",
        config = function() require("alt-substitute").setup({}) end,
    }
<


CONFIGURATION               *alt-substitute-nvim-alt-substitute-configuration*

>lua
    -- default values
    opts = {
        showNotification = true, -- whether to show the "x replacements made" notification
    }
<


USAGE                               *alt-substitute-nvim-alt-substitute-usage*

The `:AltSubstitute` works mostly like `:substitute`.


FLAGS ~


- `g`works the same way as `:substitute`Without the `g` flag, only the first match in a line is replaced. With it, every occurrence in a line is replaced.
- `f`the search query and replace value are treated as **fixed** strings,
    meaning lua magic characters are treated as literal strings.


RANGES ~


- Ranges are line-based and work |like all other vim command|.
- However, as opposed to `:substitute`, `:AltSubstitute` works on the whole buffer when no range is given. (In other words, `%` is the default range.)


ESCAPING ~


- Like with `:substitute`, slashes (`/`) delimit search query, replace
    value, and flags. Therefore, to search for or replace a `/` you need to escape it with a backslash: `\/`.


CURRENT LIMITATIONS   *alt-substitute-nvim-alt-substitute-current-limitations*


- `:substitution` flags other than `g` are not supported.
- The `ignorecase` and the `smartcase` option are ignored, the search is always
    casesensitive.
- `inccommand=split` is not supported, please use `inccommand=unsplit` instead.
- Line breaks in the search or the replacement value are not supported.


ADD SUPPORT FOR MORE REGEX FLAVORS*alt-substitute-nvim-alt-substitute-add-support-for-more-regex-flavors*

PRs adding support for more regex flavors, like for example javascript regex,
are welcome. The plugin has been specifically built with extensibility in mind,
so other regex flavors by only adding one search and one replace function.
However, the bridging to other languages necessasitates some tricky escaping
and performance optimization.

Have a look this plugin’s regex module <./lua/alt-substitute/regex.lua> to
see want needs to be implemented.


OTHER SEARCH-AND-REPLACE PLUGINS*alt-substitute-nvim-alt-substitute-other-search-and-replace-plugins*


- nvim-spectre <https://github.com/windwp/nvim-spectre>
- serch-replace.nvim <https://github.com/roobert/search-replace.nvim>
- replacer.nvim <https://github.com/gabrielpoca/replacer.nvim>
- nvim-search-and-replace <https://github.com/s1n7ax/nvim-search-and-replace>


CREDITS                           *alt-substitute-nvim-alt-substitute-credits*

**About Me** In my day job, I am a sociologist studying the social mechanisms
underlying the digital economy. For my PhD project, I investigate the
governance of the app economy and how software ecosystems manage the tension
between innovation and compatibility. If you are interested in this subject,
feel free to get in touch.

**Profiles** - reddit <https://www.reddit.com/user/pseudometapseudo> - Discord
<https://discordapp.com/users/462774483044794368/> - Academic Website
<https://chris-grieser.de/> - Twitter <https://twitter.com/pseudo_meta> -
ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser> -
LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>

**Buy Me a Coffee**

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
